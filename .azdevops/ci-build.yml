
trigger:
- main
- features/*

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  subscription: "autobots-azdo-connection"
  webAppName: "autobots-azdo"
  resourceGroup: "autobots-rg"
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
  - stage: build
    jobs:
      - job: CI
        steps:
        - task: DotNetCoreCLI@2
          displayName: restore
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: build
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '-c $(buildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: test
          inputs:
            command: 'test'
            projects: '**/*test*/*csproj'

      - job: publish
        dependsOn: CI
        steps:
        - task: DotNetCoreCLI@2
          displayName: publish
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
            workingDirectory: 'autobots.web'

        - task: PublishPipelineArtifact@1
          displayName: UploadToAzDO
          inputs:
            artifact: linuxartifact
            targetPath: '$(Build.ArtifactStagingDirectory)'

  - stage: deployToTest
    jobs:
      - deployment: DeployToTest
        displayName: Deploy To Test Env
        environment: autobotsTestEnvironment
        strategy:
          runOnce:
            deploy:
              steps:
                - bash: tree
                  displayName: Where Am I
                  workingDirectory: $(Agent.BuildDirectory)

                - task: AzureRmWebAppDeployment@4
                  displayName: Deploy App To Test
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: $(subscription)
                    appType: "webAppLinux"
                    WebAppName: $(webAppName)
                    deployToSlotOrASE: true
                    ResourceGroupName: $(resourceGroup)
                    SlotName: "test"
                    packageForLinux: "$(Agent.BuildDirectory)/linuxartifact/autobots.web.zip"

  - stage: deployToProd
    condition: and(succeeded(), eq(variables.isMain, 'true'))
    dependsOn: deployToTest
    jobs:
      - deployment: webDeployToProd
        displayName: Deploy To Prod Env
        environment: autobotsProductionEnvironment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: $(subscription)
                    appType: "webAppLinux"
                    WebAppName: $(webAppName)
                    packageForLinux: "$(Agent.BuildDirectory)/linuxartifact/autobots.web.zip"